const got = require('@/utils/got');
const CryptoJS = require('crypto-js');
const { parseDate } = require('@/utils/parse-date');

module.exports = async (ctx) => {
    const host = 'https://www.mixcloud.com';
    const imageBaseURL = 'https://thumbnailer.mixcloud.com/unsafe/480x480/';
    const headers = {
        Referer: host,
        'Content-Type': 'application/json',
        'X-Requested-With': 'XMLHttpRequest',
    };

    const type = ctx.params.type ?? 'uploads';
    if (!['stream', 'uploads', 'favorites', 'listens'].includes(type)) {
        throw Error(`Invalid type: ${type}`);
    }
    const username = ctx.params.username;

    const config = {
        stream: { name: 'Stream', node: 'stream' },
        uploads: { name: 'Shows', node: 'uploads' },
        favorites: { name: 'Favorites', node: 'favorites' },
        listens: { name: 'History', node: 'listeningHistory' },
    };
    const payloads = {
        stream: {
            query: 'query UserStreamQuery(\n  $lookup: UserLookup!\n) {\n  user: userLookup(lookup: $lookup) {\n    username\n    ...UserStreamPage_user\n    id\n  }\n  viewer {\n    ...UserStreamPage_viewer\n    id\n  }\n}\n\nfragment AudioCardActions_cloudcast on Cloudcast {\n  id\n  isPublic\n  slug\n  isExclusive\n  isUnlisted\n  isScheduled\n  isDraft\n  audioType\n  isDisabledCopyright\n  owner {\n    id\n    username\n    isSubscribedTo\n    isViewer\n  }\n  ...AudioCardFavoriteButton_cloudcast\n  ...AudioCardRepostButton_cloudcast\n  ...AudioCardShareButton_cloudcast\n  ...AudioCardAddToButton_cloudcast\n  ...AudioCardHighlightButton_cloudcast\n  ...AudioCardBoostButton_cloudcast\n  ...AudioCardStats_cloudcast\n}\n\nfragment AudioCardActions_viewer on Viewer {\n  me {\n    uploadLimits {\n      tracksPublishRemaining\n      showsPublishRemaining\n    }\n    id\n  }\n  ...AudioCardFavoriteButton_viewer\n  ...AudioCardRepostButton_viewer\n  ...AudioCardHighlightButton_viewer\n}\n\nfragment AudioCardAddToButton_cloudcast on Cloudcast {\n  id\n  isUnlisted\n  isPublic\n}\n\nfragment AudioCardBoostButton_cloudcast on Cloudcast {\n  id\n  isPublic\n  owner {\n    id\n    isViewer\n  }\n}\n\nfragment AudioCardFavoriteButton_cloudcast on Cloudcast {\n  id\n  isFavorited\n  isPublic\n  hiddenStats\n  favorites {\n    totalCount\n  }\n  slug\n  owner {\n    id\n    isFollowing\n    username\n    isSelect\n    displayName\n    isViewer\n  }\n}\n\nfragment AudioCardFavoriteButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment AudioCardHighlightButton_cloudcast on Cloudcast {\n  id\n  isPublic\n  isHighlighted\n  owner {\n    isViewer\n    id\n  }\n}\n\nfragment AudioCardHighlightButton_viewer on Viewer {\n  me {\n    id\n    hasProFeatures\n    highlighted {\n      totalCount\n    }\n  }\n}\n\nfragment AudioCardPlayButton_cloudcast on Cloudcast {\n  id\n  restrictedReason\n  owner {\n    displayName\n    country\n    username\n    isSubscribedTo\n    isViewer\n    id\n  }\n  slug\n  isAwaitingAudio\n  isDraft\n  isPlayable\n  streamInfo {\n    hlsUrl\n    dashUrl\n    url\n    uuid\n  }\n  audioLength\n  currentPosition\n  proportionListened\n  repeatPlayAmount\n  hasPlayCompleted\n  seekRestriction\n  previewUrl\n  isExclusivePreviewOnly\n  isExclusive\n  isDisabledCopyright\n}\n\nfragment AudioCardProgress_cloudcast on Cloudcast {\n  id\n  proportionListened\n  audioLength\n}\n\nfragment AudioCardRepostButton_cloudcast on Cloudcast {\n  id\n  isReposted\n  isExclusive\n  isPublic\n  reposts {\n    totalCount\n  }\n  owner {\n    isViewer\n    isSubscribedTo\n    id\n  }\n}\n\nfragment AudioCardRepostButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment AudioCardShareButton_cloudcast on Cloudcast {\n  id\n  isUnlisted\n  isPublic\n  slug\n  description\n  picture {\n    urlRoot\n  }\n  owner {\n    displayName\n    isViewer\n    username\n    id\n  }\n}\n\nfragment AudioCardStats_cloudcast on Cloudcast {\n  isExclusive\n  isDraft\n  hiddenStats\n  plays\n  publishDate\n  qualityScore\n  listenerMinutes\n  owner {\n    isSubscribedTo\n    id\n  }\n  tags(country: "GLOBAL") {\n    tag {\n      name\n      slug\n      id\n    }\n  }\n  ...AudioCardTags_cloudcast\n}\n\nfragment AudioCardTags_cloudcast on Cloudcast {\n  tags(country: "GLOBAL") {\n    tag {\n      name\n      slug\n      id\n    }\n  }\n}\n\nfragment AudioCardTitle_cloudcast on Cloudcast {\n  id\n  slug\n  name\n  audioType\n  isLiveRecording\n  isExclusive\n  owner {\n    id\n    displayName\n    username\n    ...Hovercard_user\n    ...UserBadge_user\n  }\n  ...AudioCardPlayButton_cloudcast\n  ...ExclusiveCloudcastBadgeContainer_cloudcast\n  ...CloudcastHQAudio_cloudcast\n}\n\nfragment AudioCard_cloudcast on Cloudcast {\n  id\n  slug\n  name\n  audioType\n  isAwaitingAudio\n  isDraft\n  isScheduled\n  restrictedReason\n  publishDate\n  isLiveRecording\n  isDisabledCopyright\n  owner {\n    isViewer\n    username\n    id\n  }\n  picture {\n    ...UGCImage_picture\n  }\n  ...AudioCardTitle_cloudcast\n  ...AudioCardProgress_cloudcast\n  ...AudioCardActions_cloudcast\n  ...QuantcastCloudcastTracking_cloudcast\n}\n\nfragment AudioCard_viewer on Viewer {\n  ...AudioCardActions_viewer\n  me {\n    uploadLimits {\n      tracksPublishRemaining\n      showsPublishRemaining\n    }\n    id\n  }\n}\n\nfragment CloudcastHQAudio_cloudcast on Cloudcast {\n  audioQuality\n}\n\nfragment ExclusiveCloudcastBadgeContainer_cloudcast on Cloudcast {\n  isExclusive\n  isExclusivePreviewOnly\n  slug\n  id\n  owner {\n    username\n    id\n  }\n}\n\nfragment Hovercard_user on User {\n  id\n}\n\nfragment QuantcastCloudcastTracking_cloudcast on Cloudcast {\n  owner {\n    quantcastTrackingPixel\n    id\n  }\n}\n\nfragment UGCImage_picture on Picture {\n  urlRoot\n  primaryColor\n}\n\nfragment UserBadge_user on User {\n  hasProFeatures\n  isStaff\n  hasPremiumFeatures\n}\n\nfragment UserStreamPage_user on User {\n  id\n  displayName\n  username\n  stream(first: 10) {\n    edges {\n      cursor\n      repostedBy\n      node {\n        id\n        ...AudioCard_cloudcast\n        __typename\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment UserStreamPage_viewer on Viewer {\n  ...AudioCard_viewer\n}\n',
            variables: {
                lookup: {
                    username: ctx.params.username,
                },
            },
        },
        uploads: {
            query: 'query UserUploadsQuery(\n  $lookup: UserLookup!\n  $orderBy: CloudcastOrderByEnum\n  $audioTypes: [AudioTypeEnum!]\n) {\n  user: userLookup(lookup: $lookup) {\n    username\n    ...UserUploadsPage_user_3HcCKF\n    id\n  }\n  viewer {\n    ...UserUploadsPage_viewer\n    id\n  }\n}\n\nfragment AudioCardActions_cloudcast on Cloudcast {\n  id\n  isPublic\n  slug\n  isExclusive\n  isUnlisted\n  isScheduled\n  isDraft\n  audioType\n  isDisabledCopyright\n  owner {\n    id\n    username\n    isSubscribedTo\n    isViewer\n  }\n  ...AudioCardFavoriteButton_cloudcast\n  ...AudioCardRepostButton_cloudcast\n  ...AudioCardShareButton_cloudcast\n  ...AudioCardAddToButton_cloudcast\n  ...AudioCardHighlightButton_cloudcast\n  ...AudioCardBoostButton_cloudcast\n  ...AudioCardStats_cloudcast\n}\n\nfragment AudioCardActions_viewer on Viewer {\n  me {\n    uploadLimits {\n      tracksPublishRemaining\n      showsPublishRemaining\n    }\n    id\n  }\n  ...AudioCardFavoriteButton_viewer\n  ...AudioCardRepostButton_viewer\n  ...AudioCardHighlightButton_viewer\n}\n\nfragment AudioCardAddToButton_cloudcast on Cloudcast {\n  id\n  isUnlisted\n  isPublic\n}\n\nfragment AudioCardBoostButton_cloudcast on Cloudcast {\n  id\n  isPublic\n  owner {\n    id\n    isViewer\n  }\n}\n\nfragment AudioCardFavoriteButton_cloudcast on Cloudcast {\n  id\n  isFavorited\n  isPublic\n  hiddenStats\n  favorites {\n    totalCount\n  }\n  slug\n  owner {\n    id\n    isFollowing\n    username\n    isSelect\n    displayName\n    isViewer\n  }\n}\n\nfragment AudioCardFavoriteButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment AudioCardHighlightButton_cloudcast on Cloudcast {\n  id\n  isPublic\n  isHighlighted\n  owner {\n    isViewer\n    id\n  }\n}\n\nfragment AudioCardHighlightButton_viewer on Viewer {\n  me {\n    id\n    hasProFeatures\n    highlighted {\n      totalCount\n    }\n  }\n}\n\nfragment AudioCardPlayButton_cloudcast on Cloudcast {\n  id\n  restrictedReason\n  owner {\n    displayName\n    country\n    username\n    isSubscribedTo\n    isViewer\n    id\n  }\n  slug\n  isAwaitingAudio\n  isDraft\n  isPlayable\n  streamInfo {\n    hlsUrl\n    dashUrl\n    url\n    uuid\n  }\n  audioLength\n  currentPosition\n  proportionListened\n  repeatPlayAmount\n  hasPlayCompleted\n  seekRestriction\n  previewUrl\n  isExclusivePreviewOnly\n  isExclusive\n  isDisabledCopyright\n}\n\nfragment AudioCardProgress_cloudcast on Cloudcast {\n  id\n  proportionListened\n  audioLength\n}\n\nfragment AudioCardRepostButton_cloudcast on Cloudcast {\n  id\n  isReposted\n  isExclusive\n  isPublic\n  reposts {\n    totalCount\n  }\n  owner {\n    isViewer\n    isSubscribedTo\n    id\n  }\n}\n\nfragment AudioCardRepostButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment AudioCardShareButton_cloudcast on Cloudcast {\n  id\n  isUnlisted\n  isPublic\n  slug\n  description\n  picture {\n    urlRoot\n  }\n  owner {\n    displayName\n    isViewer\n    username\n    id\n  }\n}\n\nfragment AudioCardStats_cloudcast on Cloudcast {\n  isExclusive\n  isDraft\n  hiddenStats\n  plays\n  publishDate\n  qualityScore\n  listenerMinutes\n  owner {\n    isSubscribedTo\n    id\n  }\n  tags(country: "GLOBAL") {\n    tag {\n      name\n      slug\n      id\n    }\n  }\n  ...AudioCardTags_cloudcast\n}\n\nfragment AudioCardTags_cloudcast on Cloudcast {\n  tags(country: "GLOBAL") {\n    tag {\n      name\n      slug\n      id\n    }\n  }\n}\n\nfragment AudioCardTitle_cloudcast on Cloudcast {\n  id\n  slug\n  name\n  audioType\n  isLiveRecording\n  isExclusive\n  owner {\n    id\n    displayName\n    username\n    ...Hovercard_user\n    ...UserBadge_user\n  }\n  ...AudioCardPlayButton_cloudcast\n  ...ExclusiveCloudcastBadgeContainer_cloudcast\n  ...CloudcastHQAudio_cloudcast\n}\n\nfragment AudioCard_cloudcast on Cloudcast {\n  id\n  slug\n  name\n  audioType\n  isAwaitingAudio\n  isDraft\n  isScheduled\n  restrictedReason\n  publishDate\n  isLiveRecording\n  isDisabledCopyright\n  owner {\n    isViewer\n    username\n    id\n  }\n  picture {\n    ...UGCImage_picture\n  }\n  ...AudioCardTitle_cloudcast\n  ...AudioCardProgress_cloudcast\n  ...AudioCardActions_cloudcast\n  ...QuantcastCloudcastTracking_cloudcast\n}\n\nfragment AudioCard_viewer on Viewer {\n  ...AudioCardActions_viewer\n  me {\n    uploadLimits {\n      tracksPublishRemaining\n      showsPublishRemaining\n    }\n    id\n  }\n}\n\nfragment CloudcastHQAudio_cloudcast on Cloudcast {\n  audioQuality\n}\n\nfragment ExclusiveCloudcastBadgeContainer_cloudcast on Cloudcast {\n  isExclusive\n  isExclusivePreviewOnly\n  slug\n  id\n  owner {\n    username\n    id\n  }\n}\n\nfragment Hovercard_user on User {\n  id\n}\n\nfragment QuantcastCloudcastTracking_cloudcast on Cloudcast {\n  owner {\n    quantcastTrackingPixel\n    id\n  }\n}\n\nfragment UGCImage_picture on Picture {\n  urlRoot\n  primaryColor\n}\n\nfragment UserBadge_user on User {\n  hasProFeatures\n  isStaff\n  hasPremiumFeatures\n}\n\nfragment UserUploadsPage_user_3HcCKF on User {\n  id\n  displayName\n  username\n  uploads(first: 10, orderBy: $orderBy, audioTypes: $audioTypes, isPublic: true) {\n    edges {\n      node {\n        ...AudioCard_cloudcast\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment UserUploadsPage_viewer on Viewer {\n  ...AudioCard_viewer\n}\n',
            variables: {
                lookup: {
                    username: ctx.params.username,
                },
                orderBy: 'LATEST',
                audioTypes: ['SHOW'],
            },
        },
        favorites: {
            query: 'query UserFavoritesQuery(\n  $lookup: UserLookup!\n) {\n  user: userLookup(lookup: $lookup) {\n    username\n    hiddenFavorites: favorites {\n      isHidden\n    }\n    ...UserFavoritesPage_user\n    id\n  }\n  viewer {\n    ...UserFavoritesPage_viewer\n    id\n  }\n}\n\nfragment AudioCardActions_cloudcast on Cloudcast {\n  id\n  isPublic\n  slug\n  isExclusive\n  isUnlisted\n  isScheduled\n  isDraft\n  audioType\n  isDisabledCopyright\n  owner {\n    id\n    username\n    isSubscribedTo\n    isViewer\n  }\n  ...AudioCardFavoriteButton_cloudcast\n  ...AudioCardRepostButton_cloudcast\n  ...AudioCardShareButton_cloudcast\n  ...AudioCardAddToButton_cloudcast\n  ...AudioCardHighlightButton_cloudcast\n  ...AudioCardBoostButton_cloudcast\n  ...AudioCardStats_cloudcast\n}\n\nfragment AudioCardActions_viewer on Viewer {\n  me {\n    uploadLimits {\n      tracksPublishRemaining\n      showsPublishRemaining\n    }\n    id\n  }\n  ...AudioCardFavoriteButton_viewer\n  ...AudioCardRepostButton_viewer\n  ...AudioCardHighlightButton_viewer\n}\n\nfragment AudioCardAddToButton_cloudcast on Cloudcast {\n  id\n  isUnlisted\n  isPublic\n}\n\nfragment AudioCardBoostButton_cloudcast on Cloudcast {\n  id\n  isPublic\n  owner {\n    id\n    isViewer\n  }\n}\n\nfragment AudioCardFavoriteButton_cloudcast on Cloudcast {\n  id\n  isFavorited\n  isPublic\n  hiddenStats\n  favorites {\n    totalCount\n  }\n  slug\n  owner {\n    id\n    isFollowing\n    username\n    isSelect\n    displayName\n    isViewer\n  }\n}\n\nfragment AudioCardFavoriteButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment AudioCardHighlightButton_cloudcast on Cloudcast {\n  id\n  isPublic\n  isHighlighted\n  owner {\n    isViewer\n    id\n  }\n}\n\nfragment AudioCardHighlightButton_viewer on Viewer {\n  me {\n    id\n    hasProFeatures\n    highlighted {\n      totalCount\n    }\n  }\n}\n\nfragment AudioCardPlayButton_cloudcast on Cloudcast {\n  id\n  restrictedReason\n  owner {\n    displayName\n    country\n    username\n    isSubscribedTo\n    isViewer\n    id\n  }\n  slug\n  isAwaitingAudio\n  isDraft\n  isPlayable\n  streamInfo {\n    hlsUrl\n    dashUrl\n    url\n    uuid\n  }\n  audioLength\n  currentPosition\n  proportionListened\n  repeatPlayAmount\n  hasPlayCompleted\n  seekRestriction\n  previewUrl\n  isExclusivePreviewOnly\n  isExclusive\n  isDisabledCopyright\n}\n\nfragment AudioCardProgress_cloudcast on Cloudcast {\n  id\n  proportionListened\n  audioLength\n}\n\nfragment AudioCardRepostButton_cloudcast on Cloudcast {\n  id\n  isReposted\n  isExclusive\n  isPublic\n  reposts {\n    totalCount\n  }\n  owner {\n    isViewer\n    isSubscribedTo\n    id\n  }\n}\n\nfragment AudioCardRepostButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment AudioCardShareButton_cloudcast on Cloudcast {\n  id\n  isUnlisted\n  isPublic\n  slug\n  description\n  picture {\n    urlRoot\n  }\n  owner {\n    displayName\n    isViewer\n    username\n    id\n  }\n}\n\nfragment AudioCardStats_cloudcast on Cloudcast {\n  isExclusive\n  isDraft\n  hiddenStats\n  plays\n  publishDate\n  qualityScore\n  listenerMinutes\n  owner {\n    isSubscribedTo\n    id\n  }\n  tags(country: "GLOBAL") {\n    tag {\n      name\n      slug\n      id\n    }\n  }\n  ...AudioCardTags_cloudcast\n}\n\nfragment AudioCardTags_cloudcast on Cloudcast {\n  tags(country: "GLOBAL") {\n    tag {\n      name\n      slug\n      id\n    }\n  }\n}\n\nfragment AudioCardTitle_cloudcast on Cloudcast {\n  id\n  slug\n  name\n  audioType\n  isLiveRecording\n  isExclusive\n  owner {\n    id\n    displayName\n    username\n    ...Hovercard_user\n    ...UserBadge_user\n  }\n  ...AudioCardPlayButton_cloudcast\n  ...ExclusiveCloudcastBadgeContainer_cloudcast\n  ...CloudcastHQAudio_cloudcast\n}\n\nfragment AudioCard_cloudcast on Cloudcast {\n  id\n  slug\n  name\n  audioType\n  isAwaitingAudio\n  isDraft\n  isScheduled\n  restrictedReason\n  publishDate\n  isLiveRecording\n  isDisabledCopyright\n  owner {\n    isViewer\n    username\n    id\n  }\n  picture {\n    ...UGCImage_picture\n  }\n  ...AudioCardTitle_cloudcast\n  ...AudioCardProgress_cloudcast\n  ...AudioCardActions_cloudcast\n  ...QuantcastCloudcastTracking_cloudcast\n}\n\nfragment AudioCard_viewer on Viewer {\n  ...AudioCardActions_viewer\n  me {\n    uploadLimits {\n      tracksPublishRemaining\n      showsPublishRemaining\n    }\n    id\n  }\n}\n\nfragment CloudcastHQAudio_cloudcast on Cloudcast {\n  audioQuality\n}\n\nfragment ExclusiveCloudcastBadgeContainer_cloudcast on Cloudcast {\n  isExclusive\n  isExclusivePreviewOnly\n  slug\n  id\n  owner {\n    username\n    id\n  }\n}\n\nfragment Hovercard_user on User {\n  id\n}\n\nfragment QuantcastCloudcastTracking_cloudcast on Cloudcast {\n  owner {\n    quantcastTrackingPixel\n    id\n  }\n}\n\nfragment UGCImage_picture on Picture {\n  urlRoot\n  primaryColor\n}\n\nfragment UserBadge_user on User {\n  hasProFeatures\n  isStaff\n  hasPremiumFeatures\n}\n\nfragment UserFavoritesPage_user on User {\n  id\n  displayName\n  username\n  isViewer\n  favorites(first: 10) {\n    edges {\n      node {\n        id\n        ...AudioCard_cloudcast\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment UserFavoritesPage_viewer on Viewer {\n  me {\n    id\n  }\n  ...AudioCard_viewer\n}\n',
            variables: {
                lookup: {
                    username: ctx.params.username,
                },
            },
        },
        listens: {
            query: 'query UserListensQuery(\n  $lookup: UserLookup!\n) {\n  user: userLookup(lookup: $lookup) {\n    username\n    hiddenListeningHistory: listeningHistory {\n      isHidden\n    }\n    ...UserListensPage_user\n    id\n  }\n  viewer {\n    ...UserListensPage_viewer\n    id\n  }\n}\n\nfragment AudioCardActions_cloudcast on Cloudcast {\n  id\n  isPublic\n  slug\n  isExclusive\n  isUnlisted\n  isScheduled\n  isDraft\n  audioType\n  isDisabledCopyright\n  owner {\n    id\n    username\n    isSubscribedTo\n    isViewer\n  }\n  ...AudioCardFavoriteButton_cloudcast\n  ...AudioCardRepostButton_cloudcast\n  ...AudioCardShareButton_cloudcast\n  ...AudioCardAddToButton_cloudcast\n  ...AudioCardHighlightButton_cloudcast\n  ...AudioCardBoostButton_cloudcast\n  ...AudioCardStats_cloudcast\n}\n\nfragment AudioCardActions_viewer on Viewer {\n  me {\n    uploadLimits {\n      tracksPublishRemaining\n      showsPublishRemaining\n    }\n    id\n  }\n  ...AudioCardFavoriteButton_viewer\n  ...AudioCardRepostButton_viewer\n  ...AudioCardHighlightButton_viewer\n}\n\nfragment AudioCardAddToButton_cloudcast on Cloudcast {\n  id\n  isUnlisted\n  isPublic\n}\n\nfragment AudioCardBoostButton_cloudcast on Cloudcast {\n  id\n  isPublic\n  owner {\n    id\n    isViewer\n  }\n}\n\nfragment AudioCardFavoriteButton_cloudcast on Cloudcast {\n  id\n  isFavorited\n  isPublic\n  hiddenStats\n  favorites {\n    totalCount\n  }\n  slug\n  owner {\n    id\n    isFollowing\n    username\n    isSelect\n    displayName\n    isViewer\n  }\n}\n\nfragment AudioCardFavoriteButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment AudioCardHighlightButton_cloudcast on Cloudcast {\n  id\n  isPublic\n  isHighlighted\n  owner {\n    isViewer\n    id\n  }\n}\n\nfragment AudioCardHighlightButton_viewer on Viewer {\n  me {\n    id\n    hasProFeatures\n    highlighted {\n      totalCount\n    }\n  }\n}\n\nfragment AudioCardPlayButton_cloudcast on Cloudcast {\n  id\n  restrictedReason\n  owner {\n    displayName\n    country\n    username\n    isSubscribedTo\n    isViewer\n    id\n  }\n  slug\n  isAwaitingAudio\n  isDraft\n  isPlayable\n  streamInfo {\n    hlsUrl\n    dashUrl\n    url\n    uuid\n  }\n  audioLength\n  currentPosition\n  proportionListened\n  repeatPlayAmount\n  hasPlayCompleted\n  seekRestriction\n  previewUrl\n  isExclusivePreviewOnly\n  isExclusive\n  isDisabledCopyright\n}\n\nfragment AudioCardProgress_cloudcast on Cloudcast {\n  id\n  proportionListened\n  audioLength\n}\n\nfragment AudioCardRepostButton_cloudcast on Cloudcast {\n  id\n  isReposted\n  isExclusive\n  isPublic\n  reposts {\n    totalCount\n  }\n  owner {\n    isViewer\n    isSubscribedTo\n    id\n  }\n}\n\nfragment AudioCardRepostButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment AudioCardShareButton_cloudcast on Cloudcast {\n  id\n  isUnlisted\n  isPublic\n  slug\n  description\n  picture {\n    urlRoot\n  }\n  owner {\n    displayName\n    isViewer\n    username\n    id\n  }\n}\n\nfragment AudioCardStats_cloudcast on Cloudcast {\n  isExclusive\n  isDraft\n  hiddenStats\n  plays\n  publishDate\n  qualityScore\n  listenerMinutes\n  owner {\n    isSubscribedTo\n    id\n  }\n  tags(country: "GLOBAL") {\n    tag {\n      name\n      slug\n      id\n    }\n  }\n  ...AudioCardTags_cloudcast\n}\n\nfragment AudioCardTags_cloudcast on Cloudcast {\n  tags(country: "GLOBAL") {\n    tag {\n      name\n      slug\n      id\n    }\n  }\n}\n\nfragment AudioCardTitle_cloudcast on Cloudcast {\n  id\n  slug\n  name\n  audioType\n  isLiveRecording\n  isExclusive\n  owner {\n    id\n    displayName\n    username\n    ...Hovercard_user\n    ...UserBadge_user\n  }\n  ...AudioCardPlayButton_cloudcast\n  ...ExclusiveCloudcastBadgeContainer_cloudcast\n  ...CloudcastHQAudio_cloudcast\n}\n\nfragment AudioCard_cloudcast on Cloudcast {\n  id\n  slug\n  name\n  audioType\n  isAwaitingAudio\n  isDraft\n  isScheduled\n  restrictedReason\n  publishDate\n  isLiveRecording\n  isDisabledCopyright\n  owner {\n    isViewer\n    username\n    id\n  }\n  picture {\n    ...UGCImage_picture\n  }\n  ...AudioCardTitle_cloudcast\n  ...AudioCardProgress_cloudcast\n  ...AudioCardActions_cloudcast\n  ...QuantcastCloudcastTracking_cloudcast\n}\n\nfragment AudioCard_viewer on Viewer {\n  ...AudioCardActions_viewer\n  me {\n    uploadLimits {\n      tracksPublishRemaining\n      showsPublishRemaining\n    }\n    id\n  }\n}\n\nfragment CloudcastHQAudio_cloudcast on Cloudcast {\n  audioQuality\n}\n\nfragment ExclusiveCloudcastBadgeContainer_cloudcast on Cloudcast {\n  isExclusive\n  isExclusivePreviewOnly\n  slug\n  id\n  owner {\n    username\n    id\n  }\n}\n\nfragment Hovercard_user on User {\n  id\n}\n\nfragment QuantcastCloudcastTracking_cloudcast on Cloudcast {\n  owner {\n    quantcastTrackingPixel\n    id\n  }\n}\n\nfragment UGCImage_picture on Picture {\n  urlRoot\n  primaryColor\n}\n\nfragment UserBadge_user on User {\n  hasProFeatures\n  isStaff\n  hasPremiumFeatures\n}\n\nfragment UserListensPage_user on User {\n  id\n  isViewer\n  displayName\n  username\n  listeningHistory(first: 10) {\n    totalCount\n    edges {\n      cursor\n      node {\n        id\n        cloudcast {\n          ...AudioCard_cloudcast\n          id\n        }\n        __typename\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment UserListensPage_viewer on Viewer {\n  id\n  me {\n    id\n  }\n  ...AudioCard_viewer\n}\n',
            variables: {
                lookup: {
                    username: ctx.params.username,
                },
            },
        },
        profile: {
            query: 'query UserProfileHeaderQuery(\n  $lookup: UserLookup!\n) {\n  user: userLookup(lookup: $lookup) {\n    id\n    displayName\n    username\n    isBranded\n    isStaff\n    isViewer\n    followers {\n      totalCount\n    }\n    hasCoverPicture\n    hasPremiumFeatures\n    hasProFeatures\n    picture {\n      primaryColor\n      ...UGCImage_picture\n    }\n    coverPicture {\n      urlRoot\n    }\n    ...ProfileNavigation_user\n    ...UserBadge_user\n    ...ShareUserButton_user\n    ...ProfileRegisterUpsellComponent_user\n    ...FollowButton_user\n  }\n  viewer {\n    ...ProfileRegisterUpsellComponent_viewer\n    ...FollowButton_viewer\n    id\n  }\n}\n\nfragment FollowButton_user on User {\n  id\n  isFollowed\n  isFollowing\n  isViewer\n  followers {\n    totalCount\n  }\n  username\n  displayName\n}\n\nfragment FollowButton_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment ProfileNavigation_user on User {\n  id\n  username\n  stream {\n    totalCount\n  }\n  favorites {\n    totalCount\n  }\n  listeningHistory {\n    totalCount\n  }\n  uploads(audioTypes: [SHOW]) {\n    totalCount\n  }\n  tracks: uploads(audioTypes: [TRACK]) {\n    totalCount\n  }\n  posts {\n    totalCount\n  }\n  profileNavigation(showsAudioTypes: [SHOW], tracksAudioTypes: [TRACK], streamAudioTypes: [SHOW, TRACK]) {\n    menuItems {\n      __typename\n      ... on NavigationItemInterface {\n        __isNavigationItemInterface: __typename\n        inDropdown\n      }\n      ... on HideableNavigationItemInterface {\n        __isHideableNavigationItemInterface: __typename\n        hidden\n      }\n      ... on PlaylistNavigationItem {\n        count\n        playlist {\n          id\n          name\n          slug\n        }\n      }\n    }\n  }\n}\n\nfragment ProfileRegisterUpsellComponent_user on User {\n  id\n  displayName\n  followers {\n    totalCount\n  }\n}\n\nfragment ProfileRegisterUpsellComponent_viewer on Viewer {\n  me {\n    id\n  }\n}\n\nfragment ShareUserButton_user on User {\n  biog\n  username\n  displayName\n  id\n  isUploader\n  picture {\n    urlRoot\n  }\n}\n\nfragment UGCImage_picture on Picture {\n  urlRoot\n  primaryColor\n}\n\nfragment UserBadge_user on User {\n  hasProFeatures\n  isStaff\n  hasPremiumFeatures\n}\n',
            variables: {
                lookup: {
                    username: ctx.params.username,
                },
            },
        },
    };

    const profile = (
        await got({
            method: 'post',
            url: `${host}/graphql`,
            json: payloads.profile,
            headers,
        })
    ).data.data;

    const biog = profile.user.biog;
    const image = `${imageBaseURL}${profile.user.picture.urlRoot}`;

    const data = (
        await got({
            method: 'post',
            url: `${host}/graphql`,
            json: payloads[type],
            headers,
        })
    ).data.data;

    // https://github.com/ytdl-org/youtube-dl/blob/f1487d4fca40fd37d735753e24a7bae53a1b1513/youtube_dl/extractor/mixcloud.py#L72-L79
    const decryptionKey = 'IFYOUWANTTHEARTISTSTOGETPAIDDONOTDOWNLOADFROMMIXCLOUD';
    const decryptXorCipher = (key, cipherText) => {
        const cipher = CryptoJS.enc.Base64.parse(cipherText);
        const decrypted = cipher.toString(CryptoJS.enc.Utf8);
        let result = '';
        for (let i = 0; i < decrypted.length; i++) {
            result += String.fromCharCode(decrypted.charCodeAt(i) ^ key.charCodeAt(i % key.length));
        }
        return result;
    };

    const items = data.user[config[type].node].edges.map((edge) => {
        const item = type === 'listens' ? edge.node.cloudcast : edge.node;
        return {
            title: item.name,
            author: item.owner.displayName,
            description: item.description.replace(/\n/g, '<br>'),
            pubDate: parseDate(item.publishDate),
            guid: Buffer.from(item.id, 'base64').toString('utf8'),
            link: `${host}/${username}/${item.slug}`,
            itunes_item_image: `${imageBaseURL}${item.picture.urlRoot}`,
            itunes_duration: item.audioLength,
            enclosure_url: decryptXorCipher(decryptionKey, item.streamInfo.url),
            enclosure_type: 'audio/x-m4a',
            upvotes: item.favorites.totalCount,
        };
    });

    ctx.state.data = {
        title: `Mixcloud - ${data.user.displayName}'s ${config[type].name}`,
        description: biog.replace(/\n/g, '<br>'),
        itunes_author: data.user.displayName,
        image,
        link: `${host}/${username}/${type}/`,
        item: items,
    };
};
